/*

Как правильно писать

Код читается больше, чем пишется, не нужно экономить на понятности и чистоте
ради скорости.

Старайтесть не использовать сокращения
кроме общепринятых в разрабатываемом продукте.

Когда придумываете название для общедоступной единицы,
старайтесь не использовать имена, потенциально или явно конфликтующие
со стандартными идентификаторами.

Используйте имена с простым написанием. Их проще читать и набирать.
Избегайте (в разумлных пределах) использование слов с двойными буквами,
сложным чередованием согласных.

Никогда не используйте матерные (запрещённые) слова в коде
(в том числе в комментариях).

Правила:

Идентификатор HorizontalAlignment дегче читается на английском, 
чем Alignment Horizontal

Имя CanScrollHorizontally лучше, чем ScrollableX (неочевидная ссылка на ось X)

НЕ используйте знаки подчеркивания, дефисы и другие символы, 
не являющеся буквенно-цифровыми - Can_Scroll_Horizontally

Старайтесь не использовать сокращения там, где они и не требуются

НЕ используйте акронимы, которые не являются цироко принятыми, 
и в целом используются акронимы только при необзодимости - 
SendPM(int i, string t) точно хуже, чем SendPrivateMessage(int i, string t)

Используйте универсальные имена платформы, не относящееся к конкретному языку:
ConvertToByte(string value); против ConvertToUnsignedChar(string value);

Используйте общие, не привязанные к контексту имена, когда это нужно 
ConvertToByte(string value); лучше, чем ConvertToByte(string str);

Именования методов, аргументов, переменных,
и других системных единиц отличается.

Нотации:

Pascal - указание этого стиля оформления идентификатора обозначает,
что первая буква заглавная и все последующие первые буквы слов тоже заглавные.

Например: BackColor, LastModified, DateTime.

Camel - указание этого стиля обозначает, что первая буква строчная, 
а остальные первые буквы слов заглавные.

Например: borderColor, accessTime, templateName.

Ещё:

Избегайте длинных строк, перенесите инструкцию на новую строку.

Не размещайте несколлько инструкций на одной строке.
Каждая инструкция должна начинатся с новой строки.

При разбивке длинных выражений на несколько строк, 
оставляйте операторы на новой строке (пример ниже).

int result = (1 + 2) - (3 + 4)
            /(15 * 16) - (17 + 19)
            /(25 * 26) - (27 + 29)
            /(35 * 36) - (37 + 39)
            ;

if (a > b
   && c > d
   && e > a
   || a == 1
   || c == f )
   ^ !(g != h))
{
    Console.WriteLine("vse kruta")
}
*/

